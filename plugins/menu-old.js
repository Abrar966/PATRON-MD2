const config = require('../config');
const { cmd } = require('../command');
const { runtime } = require('../lib/functions');
const os = require("os");
const axios = require('axios');

cmd({
    pattern: "menu3",
    desc: "menu the bot",
    category: "menu2",
    filename: __filename
},
async (conn, mek, m, { from, sender, pushname, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "‚ö°",
            key: m.key
        }
    });
    try {
        const dec = `‚ï≠‚îÅ‚îÅ‚îÅ„Äî *PATRON-MD Main Menu* „Äï‚îÅ‚îÅ‚îÅ‚ïÆ
‚îÉ üöπ *Owner:* ${config.OWNER_NAME}
‚îÉ ‚öôÔ∏è *Mode:* ${config.MODE}
‚îÉ üß† *Type:* NodeJs (Multi Device)
‚îÉ ‚å®Ô∏è *Prefix:* ${config.PREFIX}
‚îÉ üßæ *Version:* 2.0.0 Beta
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
‚ï≠‚îÅ‚îÅ‚îÅ„Äî *PATRON-MD* „Äï‚îÅ‚îÅ‚îÅ‚ïÆ
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*  

‚ï≠‚îÅ‚îÅ„Äî üß© *Command Categories* „Äï‚îÅ‚îÅ‚ïÆ
‚îÉ ü§ñ Aimenu
‚îÉ üé≠ Animemenu
‚îÉ üòπ Reactions
‚îÉ üîÅ Convertmenu
‚îÉ üéâ Funmenu
‚îÉ ‚¨áÔ∏è Dlmenu
‚îÉ ‚öíÔ∏è Listcmd
‚îÉ üè† Mainmenu
‚îÉ üë• Groupmenu
‚îÉ üìú Allmenu
‚îÉ üëë Ownermenu
‚îÉ üß© Othermenu
‚îÉ üñåÔ∏è Logo
‚îÉ üì¶ Repo
‚îÉ ‚öôÔ∏è Settingmenu
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* 
`;

        await conn.sendMessage(
            from,
            {
                image: { url: 'https://files.catbox.moe/e71nan.png' },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

        // Send cool voice note with context
        await conn.sendMessage(from, {
            audio: { url: 'https://github.com/Itzpatron/PATRON-DATA/raw/refs/heads/main/autovoice/SLAVA_FUNK.mp3' },
            mimetype: 'audio/mp4',
            ptt: true,
            contextInfo: {
                mentionedJid: [m.sender],
                forwardingScore: 2,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363303045895814@newsletter',
                    newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

    } catch (e) {
        console.error(e);
        reply(`‚ùå Error:\n${e}`);
    }
});

cmd({
    pattern: "logo",
    alias: ["logomenu"],
    desc: "menu the bot",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "üßÉ",
            key: m.key
        }
    });
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Logo List* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*          
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ neonlight
‚îÉ‚óà‚îÉ‚Ä¢ blackpink
‚îÉ‚óà‚îÉ‚Ä¢ dragonball
‚îÉ‚óà‚îÉ‚Ä¢ 3dcomic
‚îÉ‚óà‚îÉ‚Ä¢ america
‚îÉ‚óà‚îÉ‚Ä¢ naruto
‚îÉ‚óà‚îÉ‚Ä¢ sadgirl
‚îÉ‚óà‚îÉ‚Ä¢ clouds
‚îÉ‚óà‚îÉ‚Ä¢ futuristic
‚îÉ‚óà‚îÉ‚Ä¢ 3dpaper
‚îÉ‚óà‚îÉ‚Ä¢ eraser
‚îÉ‚óà‚îÉ‚Ä¢ sunset
‚îÉ‚óà‚îÉ‚Ä¢ leaf
‚îÉ‚óà‚îÉ‚Ä¢ galaxy
‚îÉ‚óà‚îÉ‚Ä¢ sans
‚îÉ‚óà‚îÉ‚Ä¢ boom
‚îÉ‚óà‚îÉ‚Ä¢ hacker
‚îÉ‚óà‚îÉ‚Ä¢ devilwings
‚îÉ‚óà‚îÉ‚Ä¢ nigeria
‚îÉ‚óà‚îÉ‚Ä¢ bulb
‚îÉ‚óà‚îÉ‚Ä¢ angelwings
‚îÉ‚óà‚îÉ‚Ä¢ zodiac
‚îÉ‚óà‚îÉ‚Ä¢ luxury
‚îÉ‚óà‚îÉ‚Ä¢ paint
‚îÉ‚óà‚îÉ‚Ä¢ frozen
‚îÉ‚óà‚îÉ‚Ä¢ castle
‚îÉ‚óà‚îÉ‚Ä¢ tatoo
‚îÉ‚óà‚îÉ‚Ä¢ valorant
‚îÉ‚óà‚îÉ‚Ä¢ bear
‚îÉ‚óà‚îÉ‚Ä¢ typography
‚îÉ‚óà‚îÉ‚Ä¢ birthday
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: "·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏",
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

cmd({
    pattern: "reactions",
    desc: "Shows the reaction commands",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "üí´",
            key: m.key
        }
    });
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Reactions Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*          
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ bully @tag
‚îÉ‚óà‚îÉ‚Ä¢ cuddle @tag
‚îÉ‚óà‚îÉ‚Ä¢ cry @tag
‚îÉ‚óà‚îÉ‚Ä¢ hug @tag
‚îÉ‚óà‚îÉ‚Ä¢ awoo @tag
‚îÉ‚óà‚îÉ‚Ä¢ kiss @tag
‚îÉ‚óà‚îÉ‚Ä¢ lick @tag
‚îÉ‚óà‚îÉ‚Ä¢ pat @tag
‚îÉ‚óà‚îÉ‚Ä¢ smug @tag
‚îÉ‚óà‚îÉ‚Ä¢ bonk @tag
‚îÉ‚óà‚îÉ‚Ä¢ yeet @tag
‚îÉ‚óà‚îÉ‚Ä¢ blush @tag
‚îÉ‚óà‚îÉ‚Ä¢ smile @tag
‚îÉ‚óà‚îÉ‚Ä¢ wave @tag
‚îÉ‚óà‚îÉ‚Ä¢ highfive @tag
‚îÉ‚óà‚îÉ‚Ä¢ handhold @tag
‚îÉ‚óà‚îÉ‚Ä¢ nom @tag
‚îÉ‚óà‚îÉ‚Ä¢ bite @tag
‚îÉ‚óà‚îÉ‚Ä¢ glomp @tag
‚îÉ‚óà‚îÉ‚Ä¢ slap @tag
‚îÉ‚óà‚îÉ‚Ä¢ kill @tag
‚îÉ‚óà‚îÉ‚Ä¢ happy @tag
‚îÉ‚óà‚îÉ‚Ä¢ wink @tag
‚îÉ‚óà‚îÉ‚Ä¢ poke @tag
‚îÉ‚óà‚îÉ‚Ä¢ dance @tag
‚îÉ‚óà‚îÉ‚Ä¢ cringe @tag
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 144
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// dlmenu

cmd({
    pattern: "dlmenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "‚§µÔ∏è",
            key: m.key
        }
    });
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Download Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*          
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ facebook
‚îÉ‚óà‚îÉ‚Ä¢ mediafire
‚îÉ‚óà‚îÉ‚Ä¢ tiktok
‚îÉ‚óà‚îÉ‚Ä¢ twitter
‚îÉ‚óà‚îÉ‚Ä¢ Insta
‚îÉ‚óà‚îÉ‚Ä¢ apk
‚îÉ‚óà‚îÉ‚Ä¢ img
‚îÉ‚óà‚îÉ‚Ä¢ tt2
‚îÉ‚óà‚îÉ‚Ä¢ pins
‚îÉ‚óà‚îÉ‚Ä¢ apk2
‚îÉ‚óà‚îÉ‚Ä¢ fb2
‚îÉ‚óà‚îÉ‚Ä¢ pinterest 
‚îÉ‚óà‚îÉ‚Ä¢ ttsearch
‚îÉ‚óà‚îÉ‚Ä¢ spotify
‚îÉ‚óà‚îÉ‚Ä¢ play
‚îÉ‚óà‚îÉ‚Ä¢ play2
‚îÉ‚óà‚îÉ‚Ä¢ play3
‚îÉ‚óà‚îÉ‚Ä¢ play4
‚îÉ‚óà‚îÉ‚Ä¢ play5
‚îÉ‚óà‚îÉ‚Ä¢ play6
‚îÉ‚óà‚îÉ‚Ä¢ play7
‚îÉ‚óà‚îÉ‚Ä¢ play8
‚îÉ‚óà‚îÉ‚Ä¢ play9
‚îÉ‚óà‚îÉ‚Ä¢ play10
‚îÉ‚óà‚îÉ‚Ä¢ audio
‚îÉ‚óà‚îÉ‚Ä¢ video
‚îÉ‚óà‚îÉ‚Ä¢ video2
‚îÉ‚óà‚îÉ‚Ä¢ video3
‚îÉ‚óà‚îÉ‚Ä¢ video4
‚îÉ‚óà‚îÉ‚Ä¢ video5
‚îÉ‚óà‚îÉ‚Ä¢ video6
‚îÉ‚óà‚îÉ‚Ä¢ video7
‚îÉ‚óà‚îÉ‚Ä¢ video8
‚îÉ‚óà‚îÉ‚Ä¢ video9
‚îÉ‚óà‚îÉ‚Ä¢ video10
‚îÉ‚óà‚îÉ‚Ä¢ ytmp3
‚îÉ‚óà‚îÉ‚Ä¢ ytmp4
‚îÉ‚óà‚îÉ‚Ä¢ song
‚îÉ‚óà‚îÉ‚Ä¢ darama
‚îÉ‚óà‚îÉ‚Ä¢ gdrive
‚îÉ‚óà‚îÉ‚Ä¢ ssweb
‚îÉ‚óà‚îÉ‚Ä¢ tiks
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// group menu

cmd({
    pattern: "groupmenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "‚§µÔ∏è",
            key: m.key
        }
    });
    try
       {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Group Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*          
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ grouplink
‚îÉ‚óà‚îÉ‚Ä¢ antitag
‚îÉ‚óà‚îÉ‚Ä¢ kickall
‚îÉ‚óà‚îÉ‚Ä¢ kickall2
‚îÉ‚óà‚îÉ‚Ä¢ kickall3
‚îÉ‚óà‚îÉ‚Ä¢ add
‚îÉ‚óà‚îÉ‚Ä¢ remove
‚îÉ‚óà‚îÉ‚Ä¢ kick
‚îÉ‚óà‚îÉ‚Ä¢ out
‚îÉ‚óà‚îÉ‚Ä¢ getlid
‚îÉ‚óà‚îÉ‚Ä¢ setlid
‚îÉ‚óà‚îÉ‚Ä¢ promote 
‚îÉ‚óà‚îÉ‚Ä¢ demote
‚îÉ‚óà‚îÉ‚Ä¢ dismiss 
‚îÉ‚óà‚îÉ‚Ä¢ revoke
‚îÉ‚óà‚îÉ‚Ä¢ savecontact
‚îÉ‚óà‚îÉ‚Ä¢ goodbye
‚îÉ‚óà‚îÉ‚Ä¢ welcome
‚îÉ‚óà‚îÉ‚Ä¢ delete 
‚îÉ‚óà‚îÉ‚Ä¢ getpic
‚îÉ‚óà‚îÉ‚Ä¢ ginfo
‚îÉ‚óà‚îÉ‚Ä¢ pdm
‚îÉ‚óà‚îÉ‚Ä¢ delete 
‚îÉ‚óà‚îÉ‚Ä¢ requestlist
‚îÉ‚óà‚îÉ‚Ä¢ updategname
‚îÉ‚óà‚îÉ‚Ä¢ updategdesc
‚îÉ‚óà‚îÉ‚Ä¢ acceptall
‚îÉ‚óà‚îÉ‚Ä¢ rejectall
‚îÉ‚óà‚îÉ‚Ä¢ senddm
‚îÉ‚óà‚îÉ‚Ä¢ nikal
‚îÉ‚óà‚îÉ‚Ä¢ mute
‚îÉ‚óà‚îÉ‚Ä¢ unmute
‚îÉ‚óà‚îÉ‚Ä¢ lockgc
‚îÉ‚óà‚îÉ‚Ä¢ unlockgc
‚îÉ‚óà‚îÉ‚Ä¢ invite
‚îÉ‚óà‚îÉ‚Ä¢ tag
‚îÉ‚óà‚îÉ‚Ä¢ hidetag
‚îÉ‚óà‚îÉ‚Ä¢ tagall
‚îÉ‚óà‚îÉ‚Ä¢ tagadmins
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// fun menu

cmd({
    pattern: "funmenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "‚§µÔ∏è",
            key: m.key
        }
    });
    try {

        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Fun Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*          
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ shapar
‚îÉ‚óà‚îÉ‚Ä¢ rate
‚îÉ‚óà‚îÉ‚Ä¢ insult
‚îÉ‚óà‚îÉ‚Ä¢ hack
‚îÉ‚óà‚îÉ‚Ä¢ ship
‚îÉ‚óà‚îÉ‚Ä¢ character
‚îÉ‚óà‚îÉ‚Ä¢ pickup 
‚îÉ‚óà‚îÉ‚Ä¢ joke
‚îÉ‚óà‚îÉ‚Ä¢ hrt
‚îÉ‚óà‚îÉ‚Ä¢ hpy
‚îÉ‚óà‚îÉ‚Ä¢ syd
‚îÉ‚óà‚îÉ‚Ä¢ anger
‚îÉ‚óà‚îÉ‚Ä¢ shy
‚îÉ‚óà‚îÉ‚Ä¢ kiss
‚îÉ‚óà‚îÉ‚Ä¢ mon
‚îÉ‚óà‚îÉ‚Ä¢ cunfuzed
‚îÉ‚óà‚îÉ‚Ä¢ setpp
‚îÉ‚óà‚îÉ‚Ä¢ hand
‚îÉ‚óà‚îÉ‚Ä¢ nikal
‚îÉ‚óà‚îÉ‚Ä¢ hold
‚îÉ‚óà‚îÉ‚Ä¢ hug
‚îÉ‚óà‚îÉ‚Ä¢ nikal
‚îÉ‚óà‚îÉ‚Ä¢ hifi
‚îÉ‚óà‚îÉ‚Ä¢ poke
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// other menu

cmd({
    pattern: "othermenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "ü§ñ",
            key: m.key
        }
    });
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Other Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*          
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ timenow
‚îÉ‚óà‚îÉ‚Ä¢ date
‚îÉ‚óà‚îÉ‚Ä¢ count
‚îÉ‚óà‚îÉ‚Ä¢ calculate
‚îÉ‚óà‚îÉ‚Ä¢ countx
‚îÉ‚óà‚îÉ‚Ä¢ flip
‚îÉ‚óà‚îÉ‚Ä¢ coinflip
‚îÉ‚óà‚îÉ‚Ä¢ rcolor
‚îÉ‚óà‚îÉ‚Ä¢ roll
‚îÉ‚óà‚îÉ‚Ä¢ fact
‚îÉ‚óà‚îÉ‚Ä¢ cpp
‚îÉ‚óà‚îÉ‚Ä¢ otpbox
‚îÉ‚óà‚îÉ‚Ä¢ tempnum
‚îÉ‚óà‚îÉ‚Ä¢ templist 
‚îÉ‚óà‚îÉ‚Ä¢ inbox
‚îÉ‚óà‚îÉ‚Ä¢ tempmail
‚îÉ‚óà‚îÉ‚Ä¢ bible
‚îÉ‚óà‚îÉ‚Ä¢ rw
‚îÉ‚óà‚îÉ‚Ä¢ fancy
‚îÉ‚óà‚îÉ‚Ä¢ logo <text>
‚îÉ‚óà‚îÉ‚Ä¢ define
‚îÉ‚óà‚îÉ‚Ä¢ news
‚îÉ‚óà‚îÉ‚Ä¢ movie
‚îÉ‚óà‚îÉ‚Ä¢ weather
‚îÉ‚óà‚îÉ‚Ä¢ srepo
‚îÉ‚óà‚îÉ‚Ä¢ insult
‚îÉ‚óà‚îÉ‚Ä¢ save
‚îÉ‚óà‚îÉ‚Ä¢ wikipedia
‚îÉ‚óà‚îÉ‚Ä¢ gpass
‚îÉ‚óà‚îÉ‚Ä¢ githubstalk
‚îÉ‚óà‚îÉ‚Ä¢ ytstalk
‚îÉ‚óà‚îÉ‚Ä¢ wstalk
‚îÉ‚óà‚îÉ‚Ä¢ tiktokstalk
‚îÉ‚óà‚îÉ‚Ä¢ xstalk
‚îÉ‚óà‚îÉ‚Ä¢ yts
‚îÉ‚óà‚îÉ‚Ä¢ ytv
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// main menu

cmd({
    pattern: "mainmenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "üöπ",
            key: m.key
        }
    });
    
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Main Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ* 
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÇ  *Games*
‚îÉ‚óà‚îÇ ‚Ä¢ squidgame
‚îÉ‚óà‚îÇ ‚Ä¢ *More soon*         
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ ping
‚îÉ‚óà‚îÉ‚Ä¢ live 
‚îÉ‚óà‚îÉ‚Ä¢ alive
‚îÉ‚óà‚îÉ‚Ä¢ alive2
‚îÉ‚óà‚îÉ‚Ä¢ runtime
‚îÉ‚óà‚îÉ‚Ä¢ uptime 
‚îÉ‚óà‚îÉ‚Ä¢ repo
‚îÉ‚óà‚îÉ‚Ä¢ owner
‚îÉ‚óà‚îÉ‚Ä¢ menu
‚îÉ‚óà‚îÉ‚Ä¢ menu2
‚îÉ‚óà‚îÉ‚Ä¢ restart
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// owner menu

cmd({
    pattern: "ownermenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "üî∞",
            key: m.key
        }
    });
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Owner Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*          
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ owner
‚îÉ‚óà‚îÉ‚Ä¢ menu
‚îÉ‚óà‚îÉ‚Ä¢ menu2
‚îÉ‚óà‚îÉ‚Ä¢ listcmd
‚îÉ‚óà‚îÉ‚Ä¢ allmenu
‚îÉ‚óà‚îÉ‚Ä¢ setaza
‚îÉ‚óà‚îÉ‚Ä¢ aza
‚îÉ‚óà‚îÉ‚Ä¢ repo
‚îÉ‚óà‚îÉ‚Ä¢ block
‚îÉ‚óà‚îÉ‚Ä¢ unblock
‚îÉ‚óà‚îÉ‚Ä¢ vv
‚îÉ‚óà‚îÉ‚Ä¢ vv2 / ü•π
‚îÉ‚óà‚îÉ‚Ä¢ getpp
‚îÉ‚óà‚îÉ‚Ä¢ setgpp
‚îÉ‚óà‚îÉ‚Ä¢ setpp
‚îÉ‚óà‚îÉ‚Ä¢ restart
‚îÉ‚óà‚îÉ‚Ä¢ listsudo
‚îÉ‚óà‚îÉ‚Ä¢ setsudo
‚îÉ‚óà‚îÉ‚Ä¢ delsudo
‚îÉ‚óà‚îÉ‚Ä¢ shutdown
‚îÉ‚óà‚îÉ‚Ä¢ update
‚îÉ‚óà‚îÉ‚Ä¢ checkupdate
‚îÉ‚óà‚îÉ‚Ä¢ pfilter
‚îÉ‚óà‚îÉ‚Ä¢ gfilter
‚îÉ‚óà‚îÉ‚Ä¢ listfilter
‚îÉ‚óà‚îÉ‚Ä¢ pstop
‚îÉ‚óà‚îÉ‚Ä¢ gstop
‚îÉ‚óà‚îÉ‚Ä¢ alive
‚îÉ‚óà‚îÉ‚Ä¢ alive2
‚îÉ‚óà‚îÉ‚Ä¢ ping 
‚îÉ‚óà‚îÉ‚Ä¢ gjid
‚îÉ‚óà‚îÉ‚Ä¢ jid
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// convert menu

cmd({
    pattern: "convertmenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "ü•Ä",
            key: m.key
        }
    });
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Convert Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*          
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ sticker
‚îÉ‚óà‚îÉ‚Ä¢ sticker2
‚îÉ‚óà‚îÉ‚Ä¢ emojimix
‚îÉ‚óà‚îÉ‚Ä¢ fancy
‚îÉ‚óà‚îÉ‚Ä¢ take
‚îÉ‚óà‚îÉ‚Ä¢ tomp3
‚îÉ‚óà‚îÉ‚Ä¢ tomp3
‚îÉ‚óà‚îÉ‚Ä¢ toptt
‚îÉ‚óà‚îÉ‚Ä¢ toimg
‚îÉ‚óà‚îÉ‚Ä¢ tts2
‚îÉ‚óà‚îÉ‚Ä¢ ts3
‚îÉ‚óà‚îÉ‚Ä¢ aivoice
‚îÉ‚óà‚îÉ‚Ä¢ topdf
‚îÉ‚óà‚îÉ‚Ä¢ tts
‚îÉ‚óà‚îÉ‚Ä¢ trt
‚îÉ‚óà‚îÉ‚Ä¢ base64
‚îÉ‚óà‚îÉ‚Ä¢ unbase64
‚îÉ‚óà‚îÉ‚Ä¢ binary
‚îÉ‚óà‚îÉ‚Ä¢ dbinary
‚îÉ‚óà‚îÉ‚Ä¢ tinyurl
‚îÉ‚óà‚îÉ‚Ä¢ urldecode
‚îÉ‚óà‚îÉ‚Ä¢ urlencode
‚îÉ‚óà‚îÉ‚Ä¢ tourl
‚îÉ‚óà‚îÉ‚Ä¢ repeat 
‚îÉ‚óà‚îÉ‚Ä¢ ask
‚îÉ‚óà‚îÉ‚Ä¢ readmore
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});


// anmie menu 

cmd({
    pattern: "animemenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "üßö",
            key: m.key
        }
    });
    try {
          let dec = `‚ï≠‚îÅ‚îÅ„Äî *Anime Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*            
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ fack
‚îÉ‚óà‚îÉ‚Ä¢ dog
‚îÉ‚óà‚îÉ‚Ä¢ awoo
‚îÉ‚óà‚îÉ‚Ä¢ garl
‚îÉ‚óà‚îÉ‚Ä¢ waifu
‚îÉ‚óà‚îÉ‚Ä¢ neko
‚îÉ‚óà‚îÉ‚Ä¢ megnumin
‚îÉ‚óà‚îÉ‚Ä¢ neko
‚îÉ‚óà‚îÉ‚Ä¢ maid
‚îÉ‚óà‚îÉ‚Ä¢ loli
‚îÉ‚óà‚îÉ‚Ä¢ animegirl
‚îÉ‚óà‚îÉ‚Ä¢ animegirl
‚îÉ‚óà‚îÉ‚Ä¢ animegirl1
‚îÉ‚óà‚îÉ‚Ä¢ animegirl2
‚îÉ‚óà‚îÉ‚Ä¢ animegirl3
‚îÉ‚óà‚îÉ‚Ä¢ animegirl4
‚îÉ‚óà‚îÉ‚Ä¢ animegirl5
‚îÉ‚óà‚îÉ‚Ä¢ anime1
‚îÉ‚óà‚îÉ‚Ä¢ anime1
‚îÉ‚óà‚îÉ‚Ä¢ anime2
‚îÉ‚óà‚îÉ‚Ä¢ anime3
‚îÉ‚óà‚îÉ‚Ä¢ anime4
‚îÉ‚óà‚îÉ‚Ä¢ anime5
‚îÉ‚óà‚îÉ‚Ä¢ animenews
‚îÉ‚óà‚îÉ‚Ä¢ foxgirl
‚îÉ‚óà‚îÉ‚Ä¢ naruto
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});


// ai menu 

cmd({
    pattern: "aimenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "ü§ñ",
            key: m.key
        }
    });
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Ai Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*          
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ patonai
‚îÉ‚óà‚îÉ‚Ä¢ gpt
‚îÉ‚óà‚îÉ‚Ä¢ openai
‚îÉ‚óà‚îÉ‚Ä¢ gemini
‚îÉ‚óà‚îÉ‚Ä¢ meta
‚îÉ‚óà‚îÉ‚Ä¢ deepseek
‚îÉ‚óà‚îÉ‚Ä¢ imagine 
‚îÉ‚óà‚îÉ‚Ä¢ imagine2
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// Add settings menu command
cmd({
    pattern: "settingmenu",
    desc: "Shows the settings commands",
    category: "menu",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, reply }) => {
    await conn.sendMessage(m.key.remoteJid, {
        react: {
            text: "‚öôÔ∏è",
            key: m.key
        }
    });
    try {
        let dec = `‚ï≠‚îÅ‚îÅ‚îÅ„Äî *Settings Menu* „Äï‚îÅ‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ *·¥ús·¥á .·¥ò·¥Ä·¥õ Ä·¥è…¥ ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ*  
‚îÉ‚òÖ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÉ‚òÖ‚îÇ üîß *Bot Settings*
‚îÉ‚òÖ‚îÇ ‚Ä¢ allvar [view all settings]
‚îÉ‚òÖ‚îÇ ‚Ä¢ setprefix [prefix]
‚îÉ‚òÖ‚îÇ ‚Ä¢ mode [private/public]
‚îÉ‚òÖ‚îÇ ‚Ä¢ auto-typing [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ mention-reply [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ always-online [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ auto-recording [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ auto-seen [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ status-react [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ read-message [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ anti-bad [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ auto-reply [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ auto-react [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ status-reply [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ sticker-name [name]
‚îÉ‚òÖ‚îÇ ‚Ä¢ custom-react [on/off]
‚îÉ‚òÖ‚îÇ ‚Ä¢ status-msg [message]
‚îÉ‚òÖ‚îÇ ‚Ä¢ antidel-path [same/log]
‚îÉ‚òÖ‚îÇ ‚Ä¢ setcustomemojis [emojis]
‚îÉ‚òÖ‚îÇ ‚Ä¢ owner-number [number]
‚îÉ‚òÖ‚îÇ ‚Ä¢ owner-name [name]
‚îÉ‚òÖ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îà‚ä∑
> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥Ä·¥õ Ä·¥è…¥ T·¥á·¥Ñ úÔº∏ üöπ* `;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://files.catbox.moe/e71nan.png` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363303045895814@newsletter',
                        newsletterName: '·¥ò·¥Ä·¥õ Ä·¥è…¥T·¥á·¥Ñ úÔº∏',
                        serverMessageId: 144
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});
